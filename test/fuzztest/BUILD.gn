# Copyright (c) 2022-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//foundation/filemanagement/storage_service/storage_service_aafwk.gni")

group("storage_manager_provider_fuzztest") {
  testonly = true
  deps = [
    "storagemanagerprovider_fuzzer:fuzztest",
    "storagemanagerprovidercompleteadduser_fuzzer:fuzztest",
    "storagemanagerprovidercreaterecoverkey_fuzzer:fuzztest",
    "storagemanagerprovidergenerateappkey_fuzzer:fuzztest",
    "storagemanagerprovidergetalldisks_fuzzer:fuzztest",
    "storagemanagerprovidergetallvolumes_fuzzer:fuzztest",
    "storagemanagerprovidergetbundlestats_fuzzer:fuzztest",
    "storagemanagerprovidergetdiskbyid_fuzzer:fuzztest",
    "storagemanagerprovidergetfileencryptstatus_fuzzer:fuzztest",
    "storagemanagerprovidergetfreesize_fuzzer:fuzztest",
    "storagemanagerprovidergetfreesizeofvolume_fuzzer:fuzztest",
    "storagemanagerprovidergetlockscreenstatus_fuzzer:fuzztest",
    "storagemanagerprovidergetsystemsize_fuzzer:fuzztest",
    "storagemanagerprovidergettotalsize_fuzzer:fuzztest",
    "storagemanagerprovidergettotalsizeofvolume_fuzzer:fuzztest",
    "storagemanagerprovidergetuserstoragestats_fuzzer:fuzztest",
    "storagemanagerprovidergetuserstoragestatswithuserid_fuzzer:fuzztest",
    "storagemanagerprovideradduser_fuzzer:fuzztest",
    "storagemanagerproviderformat_fuzzer:fuzztest",
    "storagemanagerprovidergetcurrentbundle_fuzzer:fuzztest",
    "storagemanagerprovidergetvolumebyid_fuzzer:fuzztest",
    "storagemanagerprovidergetvolumebyuuid_fuzzer:fuzztest",
    "storagemanagerprovidermount_fuzzer:fuzztest",
    "storagemanagerprovidernotifydiskcreated_fuzzer:fuzztest",
    "storagemanagerprovidernotifyvolumemounted_fuzzer:fuzztest",
    "storagemanagerprovidernotifyvolumestatechanged_fuzzer:fuzztest",
    "storagemanagerproviderpartition_fuzzer:fuzztest",
    "storagemanagerproviderqueryusbisinuse_fuzzer:fuzztest",
    "storagemanagerproviderremoveuser_fuzzer:fuzztest",
    "storagemanagerproviderresetsecretwithrecoverykey_fuzzer:fuzztest",
    "storagemanagerprovidersetrecoverkey_fuzzer:fuzztest",
    "storagemanagerprovidermountdfsdocs_fuzzer:fuzztest",
    "storagemanagerprovidersetvolumedescription_fuzzer:fuzztest",
    "storagemanagerproviderstartuser_fuzzer:fuzztest",
    "storagemanagerproviderstopuser_fuzzer:fuzztest",
    "storagemanagerproviderumount_fuzzer:fuzztest",
    "storagemanagerproviderupdateuseauthwithrecoverykey_fuzzer:fuzztest",
    "storagemanagerprovidernotifymtpmount_fuzzer:fuzztest",
    "storagemanagerprovidernotifymtpunmount_fuzzer:fuzztest",
    "storagemanagerprovidernotifydiskdestroyed_fuzzer:fuzztest",
    "storagemanagerprovidermountmediafuse_fuzzer:fuzztest",
    "storagemanagerproviderumountmediafuse_fuzzer:fuzztest",
  ]
}

group("storage_daemon_provider_fuzztest") {
  testonly = true
  deps = [
    "storagedaemonprovidercheck_fuzzer:fuzztest",
    "storagedaemonprovidercreaterecoverkey_fuzzer:fuzztest",
    "storagedaemonprovidercreatesharefile_fuzzer:fuzztest",
    "storagedaemonproviderdeletesharefile_fuzzer:fuzztest",
    "storagedaemonproviderlockuserscreen_fuzzer:fuzztest",
    "storagedaemonprovidermount_fuzzer:fuzztest",
    "storagedaemonprovidermountmediafuse_fuzzer:fuzztest",
    "storagedaemonproviderpartition_fuzzer:fuzztest",
    "storagedaemonproviderqueryusbisinuse_fuzzer:fuzztest",
    "storagedaemonprovidersetrecoverkey_fuzzer:fuzztest",
    "storagedaemonprovidersetvoldesc_fuzzer:fuzztest",
    "storagedaemonprovidershutdown_fuzzer:fuzztest",
    "storagedaemonproviderstartuser_fuzzer:fuzztest",
    "storagedaemonproviderstopuser_fuzzer:fuzztest",
    "storagedaemonproviderumount_fuzzer:fuzztest",
    "storagedaemonproviderumountmediafuse_fuzzer:fuzztest",
    "storagedaemonproviderupdatememorypara_fuzzer:fuzztest",
    "storagedaemonproviderusermanager_fuzzer:fuzztest",
    "storagedaemonproviderformat_fuzzer:fuzztest",
    "storagedaemonprovidersetbundlequota_fuzzer:fuzztest",
    "storagedaemonproviderdeleteuserkeys_fuzzer:fuzztest",
    "storagedaemonproviderupdateuserauth_fuzzer:fuzztest",
    "storagedaemonprovideractiveuserkey_fuzzer:fuzztest",
  ]
}

group("storage_daemon_proxy_fuzztest") {
  testonly = true
  deps = [
    "storagedaemonproxycompleteadduser_fuzzer:fuzztest",
    "storagedaemonproxyformat_fuzzer:fuzztest",
    "storagedaemonproxymount_fuzzer:fuzztest",
    "storagedaemonproxypartition_fuzzer:fuzztest",
    "storagedaemonproxyprepareuserdirs_fuzzer:fuzztest",
    "storagedaemonproxysetvolumedescription_fuzzer:fuzztest",
    "storagedaemonproxyshutdown_fuzzer:fuzztest",
    "storagedaemonproxystartuser_fuzzer:fuzztest",
  ]
}

group("filesystem_crypto_fuzztest") {
  testonly = true
  deps = [
    "filesystemcryptoactiveuserkey_fuzzer:fuzztest",
    "filesystemcryptodeleteappkey_fuzzer:fuzztest",
    "filesystemcryptodeleteuserkey_fuzzer:fuzztest",
    "filesystemcryptogenerateappkey_fuzzer:fuzztest",
    "filesystemcryptogetlockscreenstatus_fuzzer:fuzztest",
    "filesystemcryptoinactiveuserkey_fuzzer:fuzztest",
    "filesystemcryptolockuserscreen_fuzzer:fuzztest",
    "filesystemcryptounlockuserscreen_fuzzer:fuzztest",
    "filesystemcryptoupdatekeycontext_fuzzer:fuzztest",
    "filesystemcryptoupdateuserauth_fuzzer:fuzztest",
  ]
}

group("keycontrol_fuzztest") {
  testonly = true
  deps = [
    "keycontroladdkey_fuzzer:fuzztest",
    "keycontroladdkeyex_fuzzer:fuzztest",
    "keycontrolgetkeyringid_fuzzer:fuzztest",
    "keycontrolsearch_fuzzer:fuzztest",
    "keycontrolunlink_fuzzer:fuzztest",
    "keycontrolgetpolicy_fuzzer:fuzztest",
    "keycontrolgetfscryptversion_fuzzer:fuzztest",
    "keycontrolloadversion_fuzzer:fuzztest",
    "keycontrolhasfscryptsyspara_fuzzer:fuzztest",
    "keyctrlgetkeystatus_fuzzer:fuzztest",
    "keyctrlgetpolicyex_fuzzer:fuzztest",
    "keyctrlinstallkey_fuzzer:fuzztest",
    "keyctrlremovekey_fuzzer:fuzztest",
    "keyctrlsetpolicy_fuzzer:fuzztest",
  ]
}

group("storage_service_fuzztest") {
  testonly = true
  deps = [
    # deps file
    ":filesystem_crypto_fuzztest",
    ":keycontrol_fuzztest",
    ":storage_daemon_provider_fuzztest",
    ":storage_daemon_proxy_fuzztest",
    ":storage_manager_provider_fuzztest",
    "bundlestats_fuzzer:fuzztest",
    "disk_fuzzer:fuzztest",
    "fileutils_fuzzer:fuzztest",
    "fscryptutils_fuzzer:fuzztest",
    "keycontrol_fuzzer:fuzztest",
    "storagedaemonproxy_fuzzer:fuzztest",
    "storagedaemonstub_fuzzer:fuzztest",
    "storagemanagerstub_fuzzer:fuzztest",
    "storagestats_fuzzer:fuzztest",
    "storagestatusservice_fuzzer:fuzztest",
    "stringutils_fuzzer:fuzztest",
    "sysparamdynamic_fuzzer:fuzztest",
    "sysparamstatic_fuzzer:fuzztest",
    "volumecore_fuzzer:fuzztest",
    "volumeexternal_fuzzer:fuzztest",
    "storagemanagerdeleteuserkeys_fuzzer:StorageManagerQueryUsbIsInUseFuzzTest",
    "storagemanagerupdateuserauth_fuzzer:StorageManagerUpdateUserAuthFuzzTest",
    "storagemanageractiveuserkey_fuzzer:StorageManagerActiveUserKeyFuzzTest",
    "storagemanagerinactiveuserkey_fuzzer:StorageManagerInactiveUserKeyFuzzTest",
    "storagemanagerlockuserscreen_fuzzer:StorageManagerLockUserScreenFuzzTest",
    "storagemanagerunlockuserscreen_fuzzer:StorageManagerUnlockUserScreenFuzzTest",
    "storagemanagerupdatekeycontext_fuzzer:StorageManagerUpdateKeyContextFuzzTest",
    "storagemanagersetbundlequota_fuzzer:StorageManagerSetBundleQuotaFuzzTest",
    "storagemanagerupdatememorypara_fuzzer:StorageManagerUpdateMemoryParaFuzzTest",
    "storagemanagerdeleteappkey_fuzzer:StorageManagerDeleteAppkeyFuzzTest",
  ]
  if (support_open_source_libmtp &&
      storage_service_external_storage_qos_trans) {
    deps += [
      "libmtpcheckspecificdevice_fuzzer:fuzztest",
      "libmtpcreatefolder_fuzzer:fuzztest",
      "libmtpdetectrawdevices_fuzzer:fuzztest",
      "libmtp_fuzzer:fuzztest",
      "libmtpgetfilesandfolders_fuzzer:fuzztest",
      "libmtpopenrawdeviceuncached_fuzzer:fuzztest",
      "libmtpreleasedevice_fuzzer:fuzztest",
    ]
  }
}
