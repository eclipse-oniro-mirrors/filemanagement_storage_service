/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
@!namespace("@ohos.file.volumeManager", "volumeManager")

@!sts_inject("""
static { loadLibrary("volume_manager_taihe.z"); }
""")

struct Volume {
    description: String;
    uuid: String;
}

function MakeVolume(description: String, uuid: String): Volume;

@gen_async("getVolumeByUuid")
@gen_promise("getVolumeByUuid")
function GetVolumeByUuidSync(uuid: String): Volume;

@gen_async("getAllVolumes")
@gen_promise("getAllVolumes")
function GetAllVolumesSync(): Array<Volume>;
