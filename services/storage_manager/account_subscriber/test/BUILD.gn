# Copyright (C) 2022-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/filemanagement/storage_service/storage_service_aafwk.gni")

ohos_unittest("account_subscriber_test") {
    branch_protector_ret = "pac_ret"
    sanitize = {
        integer_overflow = true
        cfi = true
        cfi_cross_dso = true
        debug = false
    }
    module_out_path = "storage_service/storage_service/storage_manager"

    sources = [
        "${storage_manager_path}/account_subscriber/account_subscriber.cpp",
        "${storage_manager_path}/account_subscriber/test/account_subscriber_test.cpp",
        "${storage_manager_path}/mock/storage_manager_proxy_mock.cpp",
        "${storage_manager_path}/storage_daemon_communication/src/storage_daemon_communication.cpp",
    ]

    include_dirs = [
        "${storage_manager_path}/include",
        "${storage_service_common_path}/include",
        "${storage_interface_path}/innerkits/storage_manager/native",
    ]

    defines = [
        "STORAGE_LOG_TAG = \"StorageManager\"",
        "LOG_DOMAIN = 0xD004300",
        "private = public",
    ]

    deps = [
        "${storage_daemon_path}:storage_common_utils",
        "${storage_daemon_path}:storage_daemon_ipc",
        "${storage_interface_path}/innerkits/storage_manager/native:storage_manager_sa_proxy",
    ]

    external_deps = [
        "ability_base:want",
        "appspawn:appspawn_client",
        "cJSON:cjson",
        "c_utils:utils",
        "common_event_service:cesfwk_innerkits",
        "data_share:datashare_consumer",
        "eventhandler:libeventhandler",
        "googletest:gmock_main",
        "googletest:gtest_main",
        "hilog:libhilog",
        "hitrace:hitrace_meter",
        "ipc:ipc_single",
        "os_account:os_account_innerkits",
        "safwk:system_ability_fwk",
        "samgr:samgr_proxy",
    ]
}

group("storage_account_subscriber_test") {
    testonly = true
    deps = [ ":account_subscriber_test" ]
}
